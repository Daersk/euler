# problem 2 from project euler.net
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

# generates Fibonacci sequence up to n and stores them in a list.

fibs = []
even_fibs = []


def fib(n):
    a, b = 1, 2
    while a < n:
        print(a, end=' ')
        fibs.append(a)
        a, b = b, a+b
    print('\n')


fib(4000000)

for i in range(len(fibs)):
    if fibs[i] % 2 == 0:
        even_fibs.append(fibs[i])

print(sum(even_fibs))
